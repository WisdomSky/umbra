{
  "name": "Umbra JS",
  "tagline": "Umbra JS - Create semantic html presentation with custom elements and templates",
  "body": "***\r\nUmbra JS is a very simple, straight-forward and easy to use jQuery plug-in for creating a modularized html presentation. HTML Custom Elements is a capability for creating your own custom HTML tags and elements. Browsers with Custom Elements support recognize any invalid html tag you write in your html file, which means you retain the ability to control that invalid element, however on non-supporting browsers, elements with invalid tag will be just completely ignored.\r\n\r\nUmbra JS combines custom elements with templating system. With it, you can attach a template to each custom elements you defined in your html. \r\n\r\n***\r\n\r\n### How to use? \r\n**Duhh?! It's never been so easy!**\r\n\r\nLet's say you have a **div** with a **span** inside and want to represent it as a single custom element named \"**my-element**\"\r\n\r\n\r\nYour HTML should look like:\r\n\r\n    <my-element>John</my-element>\r\n\r\nAnd your javascript should look like:\r\n\r\n    <script>\r\n             $(document).umbra({\r\n                  tag: {\r\n                      \"my-element\" : \"<div>My name is: <span>{{content}}</div>\"\r\n                  }\r\n             });\r\n    </script>\r\n\r\nUmbra JS also supports external file templates.\r\n\r\n    <script>\r\n             $(document).umbra({\r\n                  tag: {\r\n                      \"my-element\" : \"external-template.html\"\r\n                  }\r\n             });\r\n    </script>\r\n\r\nAnd also supports closures for much more advanced manipulation. The context of the closure is the current custom element being processed. **Take note that the closure should return either html text or jquery object!**\r\n\r\n    <script>\r\n             $(document).umbra({\r\n                  tag: {\r\n                      \"my-element\" : function() {\r\n                            var $sample = $(\"<div>\");\r\n                            \r\n                            $sample.html( \"My name is: \"+ $(this).html() );\r\n                      \r\n                            return $sample;\r\n                  }\r\n             });\r\n    </script>\r\n\r\n**Now, let's combine html and javascript part:**\r\n\r\n    <html>\r\n        <head>\r\n            <title>Hey Umbra JS!</title>\r\n            <script src=\"jquery.min.js\"></script>\r\n            <script src=\"umbra.jquery.js\"></script>\r\n            <script>\r\n                    $(document).umbra({\r\n                      tag: {\r\n                          \"my-element\" : \"<div>My name is: <span>{{content}}</div>\"\r\n                      }\r\n                    });\r\n            </script>\r\n\r\n        </head>\r\n        <body\r\n            <my-element>John</my-element>\r\n        </body>\r\n    </html>\r\n\r\nBut to see is to believe right?\r\n\r\nThen you got it right **[here](http://128.199.200.152/umbra/index.php)!**\r\n\r\n**Umbra can support multiple custom elements too!!!**\r\n\r\nCheck it out **[here](http://128.199.200.152/umbra/multiple.php)!**\r\n\r\n# I have a bad news though!\r\nUmbra JS is natively supported only by **Google Chrome**. :(\r\n\r\n**But wait! there's a workaround!**\r\nI don't want you to feel bad for not having Umbra JS in different browsers.\r\nSo I'll tell you how to make it work on other browsers.\r\n\r\nYou need to download [Web Components](http://webcomponents.org/) Polyfills library and include the **webcomponentsjs.js** just above the **umbra.jquery.js** like this:\r\n\r\n    <html>\r\n        <head>\r\n            <title>Hey Umbra JS!</title>\r\n            <script src=\"jquery.min.js\"></script>\r\n            <script src=\"webcomponentsjs/webcomponents.js\"></script>\r\n            <script src=\"umbra.jquery.js\"></script>\r\n            <script>\r\n                    $(document).umbra({\r\n                      tag: {\r\n                          \"my-element\" : \"<div>My name is: <span>{{content}}</div>\"\r\n                      }\r\n                    });\r\n            </script>\r\n\r\n        </head>\r\n        <body\r\n            <my-element>John</my-element>\r\n        </body>\r\n    </html>\r\n\r\nAnd voila! Umbra JS is now working on other browsers! :D\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}